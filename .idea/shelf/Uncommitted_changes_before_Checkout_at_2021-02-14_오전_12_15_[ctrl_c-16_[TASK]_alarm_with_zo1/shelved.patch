Index: app/src/main/java/com/example/ctrl_c/alarmUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ctrl_c;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.util.Log;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\npublic class alarmUtil {\r\n\r\n    Context context;\r\n    AlarmManager alarmManager;\r\n\r\n    String type;\r\n\r\n    ArrayList<SubjectData> classes;\r\n\r\n    public alarmUtil(Context context, String type) {\r\n        this.type = type;\r\n        this.context = context;\r\n\r\n        alarmManager = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE);\r\n    }\r\n\r\n    public void setClasses(ArrayList<SubjectData> classes){\r\n        this.classes = classes;\r\n    }\r\n\r\n    public void setAlarm(int requestCode, int hour, int min, boolean useAlarm) {\r\n        if (useAlarm) {\r\n            if (min < 0) {\r\n                hour -= 1;\r\n                min += 60;\r\n                if (hour < 0) {\r\n                    hour += 24;\r\n                }\r\n            }\r\n\r\n            Calendar calendar = Calendar.getInstance();\r\n            calendar.set(Calendar.HOUR_OF_DAY, hour);\r\n            calendar.set(Calendar.MINUTE, min);\r\n            calendar.set(Calendar.SECOND, 0);\r\n            calendar.set(Calendar.MILLISECOND, 0);\r\n\r\n            long selectTime = calendar.getTimeInMillis();\r\n            long currentTime = System.currentTimeMillis();\r\n            Log.e(\"current time\", currentTime + \"\");\r\n\r\n            if (selectTime <= currentTime) {\r\n                calendar.add(Calendar.DAY_OF_YEAR, 1);\r\n                selectTime = calendar.getTimeInMillis();\r\n            }\r\n\r\n            Intent intent = new Intent(context, AlarmReceiver.class);\r\n            intent.putExtra(\"type\", type);\r\n            intent.putExtra(\"hour\", hour);\r\n            intent.putExtra(\"min\", min);\r\n            if (type.equals(\"class\")) {\r\n                intent.putExtra(\"classes\", classes);\r\n            }\r\n            PendingIntent pIntent = PendingIntent.getBroadcast(context, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n            Log.e(\"selected time\", selectTime + \"\");\r\n\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                Log.e(\"alarm\", requestCode + \"set\");\r\n                alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, selectTime, pIntent);\r\n            } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n                Log.e(\"alarm\", requestCode + \"set\");\r\n                alarmManager.setExact(AlarmManager.RTC_WAKEUP, selectTime, pIntent);\r\n            } else {\r\n                Log.e(\"alarm\", requestCode + \"set\");\r\n                alarmManager.set(AlarmManager.RTC_WAKEUP, selectTime, pIntent);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void cancelAlarm(int requestCode) {\r\n        Log.e(\"alarm\", requestCode + \"deleted\");\r\n        Intent intent = new Intent(context, AlarmReceiver.class);\r\n        PendingIntent pIntent = PendingIntent.getBroadcast(context, requestCode, intent, PendingIntent.FLAG_NO_CREATE);\r\n        alarmManager.cancel(pIntent);\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/ctrl_c/alarmUtil.java	(revision 72a4997f75206c6cc4d5ffa8b3556eb64158ab12)
+++ app/src/main/java/com/example/ctrl_c/alarmUtil.java	(date 1613229266292)
@@ -31,50 +31,48 @@
     }
 
     public void setAlarm(int requestCode, int hour, int min, boolean useAlarm) {
-        if (useAlarm) {
-            if (min < 0) {
-                hour -= 1;
-                min += 60;
-                if (hour < 0) {
-                    hour += 24;
-                }
-            }
+        if (min < 0) {
+            hour -= 1;
+            min += 60;
+            if (hour < 0) {
+                hour += 24;
+            }
+        }
 
-            Calendar calendar = Calendar.getInstance();
-            calendar.set(Calendar.HOUR_OF_DAY, hour);
-            calendar.set(Calendar.MINUTE, min);
-            calendar.set(Calendar.SECOND, 0);
-            calendar.set(Calendar.MILLISECOND, 0);
+        Calendar calendar = Calendar.getInstance();
+        calendar.set(Calendar.HOUR_OF_DAY, hour);
+        calendar.set(Calendar.MINUTE, min);
+        calendar.set(Calendar.SECOND, 0);
+        calendar.set(Calendar.MILLISECOND, 0);
 
-            long selectTime = calendar.getTimeInMillis();
-            long currentTime = System.currentTimeMillis();
-            Log.e("current time", currentTime + "");
+        long selectTime = calendar.getTimeInMillis();
+        long currentTime = System.currentTimeMillis();
+        Log.e("current time", currentTime + "");
 
-            if (selectTime <= currentTime) {
-                calendar.add(Calendar.DAY_OF_YEAR, 1);
-                selectTime = calendar.getTimeInMillis();
-            }
+        if (selectTime <= currentTime) {
+            calendar.add(Calendar.DAY_OF_YEAR, 1);
+            selectTime = calendar.getTimeInMillis();
+        }
 
-            Intent intent = new Intent(context, AlarmReceiver.class);
-            intent.putExtra("type", type);
-            intent.putExtra("hour", hour);
-            intent.putExtra("min", min);
-            if (type.equals("class")) {
-                intent.putExtra("classes", classes);
-            }
-            PendingIntent pIntent = PendingIntent.getBroadcast(context, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT);
-            Log.e("selected time", selectTime + "");
+        Intent intent = new Intent(context, AlarmReceiver.class);
+        intent.putExtra("type", type);
+        intent.putExtra("hour", hour);
+        intent.putExtra("min", min);
+        if (type.equals("class")) {
+            intent.putExtra("classes", classes);
+        }
+        PendingIntent pIntent = PendingIntent.getBroadcast(context, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT);
+        Log.e("selected time", selectTime + "");
 
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-                Log.e("alarm", requestCode + "set");
-                alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
-            } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
-                Log.e("alarm", requestCode + "set");
-                alarmManager.setExact(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
-            } else {
-                Log.e("alarm", requestCode + "set");
-                alarmManager.set(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
-            }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            Log.e("alarm", requestCode + "set");
+            alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
+        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            Log.e("alarm", requestCode + "set");
+            alarmManager.setExact(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
+        } else {
+            Log.e("alarm", requestCode + "set");
+            alarmManager.set(AlarmManager.RTC_WAKEUP, selectTime, pIntent);
         }
     }
 
